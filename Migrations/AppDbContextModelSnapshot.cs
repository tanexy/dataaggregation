// <auto-generated />
using System;
using ApiIntegrationService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiIntegrationService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ApiIntegrationService.Models.Chargebee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Company")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Locale")
                        .HasColumnType("longtext");

                    b.Property<string>("MRR")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("PiiCleared")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("Reseller")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ResourceVersion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TinNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("VatNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ChargebeeCustomers");
                });

            modelBuilder.Entity("ApiIntegrationService.Models.CurrentConfig", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("DeviceBranchAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceBranchContactsId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceBranchName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<string>("OperationID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TaxPayerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TaxPayerTIN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VatNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DeviceBranchAddressId");

                    b.HasIndex("DeviceBranchContactsId");

                    b.HasIndex("DeviceId");

                    b.ToTable("CurrentConfig");
                });

            modelBuilder.Entity("ApiIntegrationService.Models.DeviceBranchAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HouseNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DeviceBranchAddress");
                });

            modelBuilder.Entity("ApiIntegrationService.Models.Freshdesk", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Csatrating")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomFields")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FacebookId")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("JobTitle")
                        .HasColumnType("longtext");

                    b.Property<string>("Language")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("OrgContactId")
                        .HasColumnType("longtext");

                    b.Property<string>("OtherCompanies")
                        .HasColumnType("longtext");

                    b.Property<string>("OtherPhoneNumbers")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("PreferredSource")
                        .HasColumnType("longtext");

                    b.Property<string>("TimeZone")
                        .HasColumnType("longtext");

                    b.Property<string>("TwitterId")
                        .HasColumnType("longtext");

                    b.Property<string>("UniqueExternalId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("VisitorId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("freshdeskcustomerscontacts");
                });

            modelBuilder.Entity("ApiIntegrationService.Models.UpdatedContacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TaxpayerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TinNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VatNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UpdatedContacts");
                });

            modelBuilder.Entity("ApiIntegrationService.Models.ZimraActiveCustomers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActivatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BPNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("FiscalProviderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSwitchedOn")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ModelVersion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("NextPingTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("longtext");

                    b.Property<string>("SerialNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TaxpayerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TinNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("TradeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VatNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CustomerContacts");
                });

            modelBuilder.Entity("ApiIntegrationService.Models.deviceBranchContacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("deviceBranchContacts");
                });

            modelBuilder.Entity("ApiIntegrationService.Models.Chargebee", b =>
                {
                    b.OwnsOne("ApiIntegrationService.Models.Address", "BillingAddress", b1 =>
                        {
                            b1.Property<int>("ChargebeeId")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("BillingAddressCity");

                            b1.Property<string>("Company")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("BillingAddressCompany");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("BillingAddressCountry");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("BillingAddressEmail");

                            b1.Property<string>("Line1")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("BillingAddressLine1");

                            b1.Property<string>("Line2")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("BillingAddressLine2");

                            b1.Property<string>("Line3")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("BillingAddressLine3");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("BillingAddressPhone");

                            b1.HasKey("ChargebeeId");

                            b1.ToTable("ChargebeeCustomers");

                            b1.WithOwner()
                                .HasForeignKey("ChargebeeId");
                        });

                    b.Navigation("BillingAddress");
                });

            modelBuilder.Entity("ApiIntegrationService.Models.CurrentConfig", b =>
                {
                    b.HasOne("ApiIntegrationService.Models.DeviceBranchAddress", "DeviceBranchAddress")
                        .WithMany()
                        .HasForeignKey("DeviceBranchAddressId");

                    b.HasOne("ApiIntegrationService.Models.deviceBranchContacts", "DeviceBranchContacts")
                        .WithMany()
                        .HasForeignKey("DeviceBranchContactsId");

                    b.HasOne("ApiIntegrationService.Models.ZimraActiveCustomers", "ZimraActiveCustomers")
                        .WithMany("Configuration")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceBranchAddress");

                    b.Navigation("DeviceBranchContacts");

                    b.Navigation("ZimraActiveCustomers");
                });

            modelBuilder.Entity("ApiIntegrationService.Models.ZimraActiveCustomers", b =>
                {
                    b.Navigation("Configuration");
                });
#pragma warning restore 612, 618
        }
    }
}
